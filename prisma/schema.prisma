// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  clerk_id       String?  @unique
  email          String   @unique
  name           String
  score          Int      @default(0)
  guessesMade    Int      @default(0)
  guessesWon     Int      @default(0)
  guessesLost    Int      @default(0)
  guessesPending Int      @default(0)
  activeGuess    Json?
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  guesses        Guess[]

  @@index([clerk_id])
  @@index([email])
  @@map("users")
}

model Guess {
  id         String    @id @default(uuid()) @map("guessId")
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  direction  Direction
  startPrice Float
  endPrice   Float?
  guessedAt  DateTime  @default(now())
  isActive   Boolean   @default(true)
  resolved   Boolean   @default(false)
  result     Result?
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")

  @@index([userId])
  @@index([isActive])
  @@map("guesses")
}

model Price {
  id        String   @id @default(uuid())
  value     Float
  currency  String   @default("USD")
  timestamp DateTime @default(now())
  asset     String   @default("bitcoin")
  period    String?

  priceChange24h   Float?
  percentChange24h Float?
  historyData      Json?
  expiresAt        DateTime?

  @@index([timestamp])
  @@index([asset, period])
  @@map("prices")
}

enum Direction {
  up
  down
}

enum Result {
  correct
  incorrect
}
